-- DROP DATABASE IF EXISTS chaseriggs;
-- CREATE DATABASE chaseriggs;
-- CREATE SCHEMA FirstSchema;

DROP TABLE IF EXISTS QUESTIONS CASCADE;
CREATE TABLE QUESTIONS(
  ID SERIAL PRIMARY KEY NOT NULL,
  PRODUCT_ID INT NOT NULL,
  BODY VARCHAR(1000) NOT NULL,
  DATE_WRITTEN VARCHAR(24) NOT NULL,
  ASKER_NAME VARCHAR(60) NOT NULL,
  ASKER_EMAIL VARCHAR(60) NOT NULL,
  REPORTED INT NOT NULL,
  HELPFUL INT NOT NULL
);

COPY QUESTIONS(ID, PRODUCT_ID, BODY, DATE_WRITTEN, ASKER_NAME, ASKER_EMAIL, REPORTED, HELPFUL) FROM '/Users/chaseriggs/Downloads/questions.csv' DELIMITER ',' CSV HEADER;

DROP TABLE IF EXISTS TEMPQUESTIONS CASCADE;
CREATE TABLE TEMPQUESTIONS(
  ID SERIAL PRIMARY KEY NOT NULL,
  PRODUCT_ID INT NOT NULL,
  BODY VARCHAR(1000) NOT NULL,
  DATE_WRITTEN VARCHAR(24) NOT NULL,
  ASKER_NAME VARCHAR(60) NOT NULL,
  ASKER_EMAIL VARCHAR(60) NOT NULL,
  REPORTED INT NOT NULL,
  HELPFUL INT NOT NULL
);

COPY TEMPQUESTIONS(ID, PRODUCT_ID, BODY, DATE_WRITTEN, ASKER_NAME, ASKER_EMAIL, REPORTED, HELPFUL) FROM '/Users/chaseriggs/Downloads/questions.csv' DELIMITER ',' CSV HEADER;
UPDATE QUESTIONS SET DATE_WRITTEN = 0;
UPDATE QUESTIONS SET DATE_WRITTEN = TO_TIMESTAMP(TEMPQUESTIONS.DATE_WRITTEN:: DOUBLE PRECISION / 1000)::TIMESTAMP WITH TIME ZONE AT TIME ZONE 'Etc/UTC' FROM TEMPQUESTIONS WHERE QUESTIONS.ID = TEMPQUESTIONS.ID;
UPDATE QUESTIONS SET DATE_WRITTEN = REPLACE(DATE_WRITTEN, ' ', 'T');
UPDATE QUESTIONS SET DATE_WRITTEN = CONCAT(DATE_WRITTEN, 'Z');
DROP TABLE TEMPQUESTIONS CASCADE;

DROP TABLE IF EXISTS ANSWERS CASCADE;
CREATE TABLE ANSWERS(
  ID SERIAL PRIMARY KEY NOT NULL,
  QUESTION_ID INT NOT NULL,
  BODY VARCHAR(1000),
  DATE_WRITTEN VARCHAR(24) NOT NULL,
  ANSWERER_NAME VARCHAR(60) NOT NULL,
  ANSWERER_EMAIL VARCHAR(60) NOT NULL,
  REPORTED INT NOT NULL,
  HELPFUL INT NOT NULL,
  CONSTRAINT fk_question
    FOREIGN KEY(QUESTION_ID)
      REFERENCES QUESTIONS(ID)
);

COPY ANSWERS(ID, QUESTION_ID, BODY, DATE_WRITTEN, ANSWERER_NAME, ANSWERER_EMAIL, REPORTED, HELPFUL) FROM '/Users/chaseriggs/Downloads/answers.csv' DELIMITER ',' CSV HEADER;

DROP TABLE IF EXISTS TEMPANSWERS CASCADE;
CREATE TABLE TEMPANSWERS(
  ID SERIAL PRIMARY KEY NOT NULL,
  QUESTION_ID INT NOT NULL,
  BODY VARCHAR(1000),
  DATE_WRITTEN VARCHAR(24) NOT NULL,
  ANSWERER_NAME VARCHAR(60) NOT NULL,
  ANSWERER_EMAIL VARCHAR(60) NOT NULL,
  REPORTED INT NOT NULL,
  HELPFUL INT NOT NULL
);

COPY TEMPANSWERS(ID, QUESTION_ID, BODY, DATE_WRITTEN, ANSWERER_NAME, ANSWERER_EMAIL, REPORTED, HELPFUL) FROM '/Users/chaseriggs/Downloads/answers.csv' DELIMITER ',' CSV HEADER;
UPDATE ANSWERS SET DATE_WRITTEN = 0;
UPDATE ANSWERS SET DATE_WRITTEN = TO_TIMESTAMP(TEMPANSWERS.DATE_WRITTEN:: DOUBLE PRECISION / 1000)::TIMESTAMP WITH TIME ZONE AT TIME ZONE 'Etc/UTC' FROM TEMPANSWERS WHERE ANSWERS.ID = TEMPANSWERS.ID;
UPDATE ANSWERS SET DATE_WRITTEN = REPLACE(DATE_WRITTEN, ' ', 'T');
UPDATE ANSWERS SET DATE_WRITTEN = CONCAT(DATE_WRITTEN, 'Z');
DROP TABLE TEMPANSWERS CASCADE;

DROP TABLE IF EXISTS ANSWERS_PHOTOS CASCADE;
CREATE TABLE ANSWERS_PHOTOS(
  ID SERIAL PRIMARY KEY NOT NULL,
  ANSWER_ID INT NOT NULL,
  URL VARCHAR(200),
  CONSTRAINT fk_answer
    FOREIGN KEY(ANSWER_ID)
      REFERENCES ANSWERS(ID)
);

COPY ANSWERS_PHOTOS(ID, ANSWER_ID, URL) FROM '/Users/chaseriggs/Downloads/answers_photos.csv' DELIMITER ',' CSV HEADER;

-- Pick a starting value for the serial, greater than any existing value in the table
-- SELECT MAX(id)+1 FROM mytable

-- Create a sequence for the serial (tablename_columnname_seq is a good name)
-- CREATE SEQUENCE test_id_seq MINVALUE 3 (assuming you want to start at 3)

-- Alter the default of the column to use the sequence
-- ALTER TABLE test ALTER id SET DEFAULT nextval('test_id_seq')

-- Alter the sequence to be owned by the table/column;
-- ALTER SEQUENCE test_id_seq OWNED BY test.id